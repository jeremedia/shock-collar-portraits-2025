{
  "ignored_warnings": [
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "45d1246393ffe9084559b107a48b56134353e2a5aefa5d345b68f3d1cdbec6ed",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "app/controllers/api/photos_controller.rb",
      "line": 134,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "`#{\"exiftool -j -n -G1 \\\"#{Tempfile.new([\"photo_exif_\", File.extname(photo.image.filename.to_s)]).path}\\\" 2>&1\"}`",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Api::PhotosController",
        "method": "extract_full_exif"
      },
      "user_input": "Tempfile.new([\"photo_exif_\", File.extname(photo.image.filename.to_s)]).path",
      "confidence": "Medium",
      "cwe_id": [
        78
      ],
      "note": "False positive: The file path comes from Tempfile.new which generates a secure temporary file path. The filename extension comes from Active Storage which sanitizes filenames. No user input reaches the shell command."
    },
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "e534b0558ecb52929c87c8efded645720a02bea7d9f3d78b76ccaf232cad4aee",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "app/models/photo.rb",
      "line": 448,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "`exiftool -DateTimeOriginal -s3 \"#{original_path}\" 2>/dev/null`",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "Photo",
        "method": "extract_datetime_from_exif"
      },
      "user_input": "original_path",
      "confidence": "Medium",
      "cwe_id": [
        78
      ],
      "note": "False positive: original_path is a database field that contains the original file path from the import process. It is not user-controllable and the path is properly quoted in the shell command."
    },
    {
      "warning_type": "Command Injection",
      "warning_code": 14,
      "fingerprint": "c3ecab05cd5df879e06fc7b9e5f3e7ee18163ab9ff23e5817d6563e73b0307aa",
      "check_name": "Execute",
      "message": "Possible command injection",
      "file": "app/services/face_detection_service.rb",
      "line": 66,
      "link": "https://brakemanscanner.org/docs/warning_types/command_injection/",
      "code": "Open3.capture3(\"swift #{DETECTION_SCRIPT} \\\"#{image_path}\\\"\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "FaceDetectionService",
        "method": "detect_faces_vision"
      },
      "user_input": "image_path",
      "confidence": "Medium",
      "cwe_id": [
        78
      ],
      "note": "False positive: image_path comes from Active Storage download to a temporary file. The path is generated by the system, not user input. The DETECTION_SCRIPT constant is a hardcoded path to our Swift script."
    },
    {
      "warning_type": "File Access",
      "warning_code": 16,
      "fingerprint": "7fbb8a59b65cdfba6892f2b6eff1928db3b32d57e4964c0d3af476be562a0be4",
      "check_name": "SendFile",
      "message": "Parameter value used in file name",
      "file": "app/controllers/gallery_controller.rb",
      "line": 333,
      "link": "https://brakemanscanner.org/docs/warning_types/file_access/",
      "code": "send_file((PhotoSession.find_by!(:burst_id => params[:id]) or PhotoSession.find(params[:id])).photos.find(params[:photo_id]).original_path, :filename => File.basename((PhotoSession.find_by!(:burst_id => params[:id]) or PhotoSession.find(params[:id])).photos.find(params[:photo_id]).original_path), :type => ((((\"image/jpeg\" or \"image/heic\") or \"image/png\") or \"application/octet-stream\")), :disposition => \"attachment\")",
      "render_path": null,
      "location": {
        "type": "method",
        "class": "GalleryController",
        "method": "download_original"
      },
      "user_input": "params[:id]",
      "confidence": "Weak",
      "cwe_id": [
        22
      ],
      "note": "False positive: The params[:id] and params[:photo_id] are used to find records via ActiveRecord, which validates and sanitizes the input. The actual file path comes from the database, not directly from user input."
    }
  ],
  "updated": "2025-09-22 15:15:00 -0500",
  "brakeman_version": "7.1.0"
}