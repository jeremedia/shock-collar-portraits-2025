<!DOCTYPE html>
<html>
  <head>
    <title><%= content_for(:title) || "Shock Collar Rails" %></title>
    <meta name="viewport" content="width=device-width,initial-scale=1">
    <meta name="apple-mobile-web-app-capable" content="yes">
    <meta name="mobile-web-app-capable" content="yes">
    <%= csrf_meta_tags %>
    <%= csp_meta_tag %>

    <%= yield :head %>

    <%# Enable PWA manifest for installable apps (make sure to enable in config/routes.rb too!) %>
    <%#= tag.link rel: "manifest", href: pwa_manifest_path(format: :json) %>

    <link rel="icon" href="/icon.png" type="image/png">
    <link rel="icon" href="/icon.svg" type="image/svg+xml">
    <link rel="apple-touch-icon" href="/icon.png">

    <%# Includes all stylesheet files in app/assets/stylesheets %>
    <%= stylesheet_link_tag :app, "data-turbo-track": "reload" %>
    <%= javascript_importmap_tags %>
  </head>

  <body>
    <!-- Flash messages for Devise -->
    <% if notice.present? %>
      <div class="bg-green-600 text-white px-4 py-2 text-center">
        <%= notice %>
      </div>
    <% end %>
    <% if alert.present? %>
      <div class="bg-red-600 text-white px-4 py-2 text-center">
        <%= alert %>
      </div>
    <% end %>
    
    <!-- User info bar -->
    <% if user_signed_in? %>
      <div class="bg-gray-900 text-white px-4 py-2 text-sm flex justify-between items-center">
        <div>
          Logged in as: <strong><%= current_user.name || current_user.email %></strong>
          <% if current_user.admin? %>
            <span class="ml-2 px-2 py-1 bg-yellow-600 text-black text-xs rounded">Admin</span>
          <% end %>
        </div>
        <div>
          <%= link_to "Logout", destroy_user_session_path, method: :delete, data: { turbo_method: :delete }, class: "text-red-400 hover:text-red-300" %>
        </div>
      </div>
    <% end %>
    
    <%= yield %>
    
    <!-- Service Worker Registration -->
    <script>
      if ('serviceWorker' in navigator) {
        navigator.serviceWorker.register('/sw.js', { scope: '/' })
          .then(function(registration) {
            console.log('Service Worker registered successfully:', registration.scope);
            
            // Listen for updates
            registration.addEventListener('updatefound', function() {
              const newWorker = registration.installing;
              console.log('New Service Worker found, installing...');
              
              newWorker.addEventListener('statechange', function() {
                if (newWorker.state === 'installed' && navigator.serviceWorker.controller) {
                  console.log('New Service Worker installed, ready to activate');
                }
              });
            });
          })
          .catch(function(error) {
            console.log('Service Worker registration failed:', error);
          });

        // Listen for messages from service worker
        navigator.serviceWorker.addEventListener('message', function(event) {
          const { type, data } = event.data;
          
          if (type === 'CACHE_STATUS') {
            console.log('Thumbnail cache status:', data);
          }
        });

        // Preload thumbnails for current session (if we're on a session page)
        document.addEventListener('DOMContentLoaded', function() {
          const sessionContainer = document.querySelector('[data-controller="image-viewer"]');
          if (sessionContainer && navigator.serviceWorker.controller) {
            // Get all thumbnail URLs from the page
            const thumbnailImages = document.querySelectorAll('.image-container img[loading="lazy"]');
            const thumbnailUrls = Array.from(thumbnailImages).map(img => img.src).filter(Boolean);
            
            if (thumbnailUrls.length > 0) {
              console.log(`Preloading ${thumbnailUrls.length} thumbnails...`);
              navigator.serviceWorker.controller.postMessage({
                type: 'CACHE_THUMBNAILS',
                data: { urls: thumbnailUrls }
              });
            }
          }
        });
      }
    </script>
  </body>
</html>
