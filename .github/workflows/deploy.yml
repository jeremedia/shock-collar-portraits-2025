name: Deploy to Production

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag to deploy (e.g., v1.0.0)'
        required: false
        default: ''

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Deploy Release to Production
      uses: appleboy/ssh-action@v1.0.0
      with:
        # Target server (jer-serve via Tailscale)
        host: 100.74.87.20
        username: jeremy
        key: ${{ secrets.PRODUCTION_SSH_KEY }}
        port: 22

        # Jump host (Caddy server with public IP)
        proxy_host: 143.110.147.77
        proxy_username: root
        proxy_key: ${{ secrets.JUMP_HOST_SSH_KEY }}
        proxy_port: 22

        # Deployment script
        script: |
          cd /home/jeremy/apps/shock-collar-portraits-2025

          # Determine which tag to deploy
          DEPLOY_TAG="${{ github.event.release.tag_name }}"
          if [ -z "$DEPLOY_TAG" ]; then
            DEPLOY_TAG="${{ github.event.inputs.tag }}"
          fi

          if [ -z "$DEPLOY_TAG" ]; then
            echo "‚ùå No release tag specified for deployment"
            exit 1
          fi

          echo "üöÄ Deploying Shock Collar Portraits 2025 release: $DEPLOY_TAG"

          # Fetch latest tags and changes
          git fetch --all --tags

          # Checkout the specific release tag
          git checkout tags/$DEPLOY_TAG -f

          # Setup Ruby environment with RVM
          source /usr/share/rvm/scripts/rvm
          rvm use 3.4.5

          # Install/update dependencies
          bundle install --deployment --without development test

          # IMPORTANT: Do NOT run db:setup or db:create
          # SQLite databases are managed separately and contain production data
          # Only run migrations if schema changes
          if [ -f storage/production.sqlite3 ]; then
            echo "‚úÖ Production databases exist, running migrations only..."
            RAILS_ENV=production bundle exec rails db:migrate
          else
            echo "‚ö†Ô∏è  WARNING: No production databases found!"
            echo "‚ö†Ô∏è  Databases must be manually deployed first using:"
            echo "‚ö†Ô∏è  rsync -avz storage/production*.sqlite3 jeremy@jer-serve:/home/jeremy/apps/shock-collar-portraits-2025/storage/"
            exit 1
          fi

          # Precompile assets (minimal since most assets are in MinIO)
          RAILS_ENV=production bundle exec rails assets:precompile

          # Clear Rails cache
          RAILS_ENV=production bundle exec rails tmp:clear

          # Restart BOTH services (web and queue)
          echo "üîÑ Restarting web service..."
          sudo systemctl restart shock-collar-portraits.service

          echo "üîÑ Restarting queue service..."
          sudo systemctl restart shock-collar-portraits-queue.service

          # Wait for services to start
          sleep 5

          # Check both services status
          echo "üìä Web service status:"
          sudo systemctl status shock-collar-portraits.service --no-pager

          echo "üìä Queue service status:"
          sudo systemctl status shock-collar-portraits-queue.service --no-pager

          echo "‚úÖ Shock Collar Portraits 2025 release $DEPLOY_TAG deployed successfully!"
          echo "üåê Live at: https://scp-2025.oknotok.com"